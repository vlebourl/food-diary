// Generated by Dagger (https://dagger.dev).
package com.fooddiary.presentation.viewmodel;

import com.fooddiary.domain.usecase.AddSymptomEventUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import error.NonExistentClass;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SymptomEntryViewModel_Factory implements Factory<SymptomEntryViewModel> {
  private final Provider<AddSymptomEventUseCase> addSymptomEventUseCaseProvider;

  private final Provider<NonExistentClass> symptomEventRepositoryProvider;

  private final Provider<NonExistentClass> foodEntryRepositoryProvider;

  public SymptomEntryViewModel_Factory(
      Provider<AddSymptomEventUseCase> addSymptomEventUseCaseProvider,
      Provider<NonExistentClass> symptomEventRepositoryProvider,
      Provider<NonExistentClass> foodEntryRepositoryProvider) {
    this.addSymptomEventUseCaseProvider = addSymptomEventUseCaseProvider;
    this.symptomEventRepositoryProvider = symptomEventRepositoryProvider;
    this.foodEntryRepositoryProvider = foodEntryRepositoryProvider;
  }

  @Override
  public SymptomEntryViewModel get() {
    return newInstance(addSymptomEventUseCaseProvider.get(), symptomEventRepositoryProvider.get(), foodEntryRepositoryProvider.get());
  }

  public static SymptomEntryViewModel_Factory create(
      Provider<AddSymptomEventUseCase> addSymptomEventUseCaseProvider,
      Provider<NonExistentClass> symptomEventRepositoryProvider,
      Provider<NonExistentClass> foodEntryRepositoryProvider) {
    return new SymptomEntryViewModel_Factory(addSymptomEventUseCaseProvider, symptomEventRepositoryProvider, foodEntryRepositoryProvider);
  }

  public static SymptomEntryViewModel newInstance(AddSymptomEventUseCase addSymptomEventUseCase,
      NonExistentClass symptomEventRepository, NonExistentClass foodEntryRepository) {
    return new SymptomEntryViewModel(addSymptomEventUseCase, symptomEventRepository, foodEntryRepository);
  }
}
