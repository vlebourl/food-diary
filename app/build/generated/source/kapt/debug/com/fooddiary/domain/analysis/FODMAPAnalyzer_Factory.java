// Generated by Dagger (https://dagger.dev).
package com.fooddiary.domain.analysis;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import error.NonExistentClass;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FODMAPAnalyzer_Factory implements Factory<FODMAPAnalyzer> {
  private final Provider<NonExistentClass> fodmapRepositoryProvider;

  public FODMAPAnalyzer_Factory(Provider<NonExistentClass> fodmapRepositoryProvider) {
    this.fodmapRepositoryProvider = fodmapRepositoryProvider;
  }

  @Override
  public FODMAPAnalyzer get() {
    return newInstance(fodmapRepositoryProvider.get());
  }

  public static FODMAPAnalyzer_Factory create(Provider<NonExistentClass> fodmapRepositoryProvider) {
    return new FODMAPAnalyzer_Factory(fodmapRepositoryProvider);
  }

  public static FODMAPAnalyzer newInstance(NonExistentClass fodmapRepository) {
    return new FODMAPAnalyzer(fodmapRepository);
  }
}
