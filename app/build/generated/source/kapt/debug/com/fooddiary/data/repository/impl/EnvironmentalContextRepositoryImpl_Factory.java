// Generated by Dagger (https://dagger.dev).
package com.fooddiary.data.repository.impl;

import com.fooddiary.data.database.dao.EnvironmentalContextDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class EnvironmentalContextRepositoryImpl_Factory implements Factory<EnvironmentalContextRepositoryImpl> {
  private final Provider<EnvironmentalContextDao> environmentalContextDaoProvider;

  public EnvironmentalContextRepositoryImpl_Factory(
      Provider<EnvironmentalContextDao> environmentalContextDaoProvider) {
    this.environmentalContextDaoProvider = environmentalContextDaoProvider;
  }

  @Override
  public EnvironmentalContextRepositoryImpl get() {
    return newInstance(environmentalContextDaoProvider.get());
  }

  public static EnvironmentalContextRepositoryImpl_Factory create(
      Provider<EnvironmentalContextDao> environmentalContextDaoProvider) {
    return new EnvironmentalContextRepositoryImpl_Factory(environmentalContextDaoProvider);
  }

  public static EnvironmentalContextRepositoryImpl newInstance(
      EnvironmentalContextDao environmentalContextDao) {
    return new EnvironmentalContextRepositoryImpl(environmentalContextDao);
  }
}
