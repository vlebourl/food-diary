// Generated by view binder compiler. Do not edit!
package com.fooddiary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fooddiary.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFoodEntryBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnAddIngredient;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final MaterialButton btnSelectDateTime;

  @NonNull
  public final MaterialCardView cardFodmapAnalysis;

  @NonNull
  public final ChipGroup chipGroupIngredients;

  @NonNull
  public final TextInputEditText etFoodName;

  @NonNull
  public final TextInputEditText etNewIngredient;

  @NonNull
  public final TextInputEditText etNotes;

  @NonNull
  public final TextInputEditText etPortions;

  @NonNull
  public final TextInputEditText etPreparationMethod;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final AutoCompleteTextView spinnerEatingSpeed;

  @NonNull
  public final AutoCompleteTextView spinnerLocation;

  @NonNull
  public final AutoCompleteTextView spinnerMealType;

  @NonNull
  public final AutoCompleteTextView spinnerPortionUnit;

  @NonNull
  public final AutoCompleteTextView spinnerSocialContext;

  @NonNull
  public final TextInputLayout tilFoodName;

  @NonNull
  public final TextInputLayout tilPortions;

  @NonNull
  public final TextView tvDisaccharidesLevel;

  @NonNull
  public final TextView tvMonosaccharidesLevel;

  @NonNull
  public final TextView tvOligosaccharidesLevel;

  @NonNull
  public final TextView tvOverallFodmapLevel;

  @NonNull
  public final TextView tvPolyolsLevel;

  @NonNull
  public final TextView tvProblematicIngredients;

  private FragmentFoodEntryBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton btnAddIngredient, @NonNull MaterialButton btnCancel,
      @NonNull MaterialButton btnSave, @NonNull MaterialButton btnSelectDateTime,
      @NonNull MaterialCardView cardFodmapAnalysis, @NonNull ChipGroup chipGroupIngredients,
      @NonNull TextInputEditText etFoodName, @NonNull TextInputEditText etNewIngredient,
      @NonNull TextInputEditText etNotes, @NonNull TextInputEditText etPortions,
      @NonNull TextInputEditText etPreparationMethod, @NonNull ProgressBar progressBar,
      @NonNull AutoCompleteTextView spinnerEatingSpeed,
      @NonNull AutoCompleteTextView spinnerLocation, @NonNull AutoCompleteTextView spinnerMealType,
      @NonNull AutoCompleteTextView spinnerPortionUnit,
      @NonNull AutoCompleteTextView spinnerSocialContext, @NonNull TextInputLayout tilFoodName,
      @NonNull TextInputLayout tilPortions, @NonNull TextView tvDisaccharidesLevel,
      @NonNull TextView tvMonosaccharidesLevel, @NonNull TextView tvOligosaccharidesLevel,
      @NonNull TextView tvOverallFodmapLevel, @NonNull TextView tvPolyolsLevel,
      @NonNull TextView tvProblematicIngredients) {
    this.rootView = rootView;
    this.btnAddIngredient = btnAddIngredient;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.btnSelectDateTime = btnSelectDateTime;
    this.cardFodmapAnalysis = cardFodmapAnalysis;
    this.chipGroupIngredients = chipGroupIngredients;
    this.etFoodName = etFoodName;
    this.etNewIngredient = etNewIngredient;
    this.etNotes = etNotes;
    this.etPortions = etPortions;
    this.etPreparationMethod = etPreparationMethod;
    this.progressBar = progressBar;
    this.spinnerEatingSpeed = spinnerEatingSpeed;
    this.spinnerLocation = spinnerLocation;
    this.spinnerMealType = spinnerMealType;
    this.spinnerPortionUnit = spinnerPortionUnit;
    this.spinnerSocialContext = spinnerSocialContext;
    this.tilFoodName = tilFoodName;
    this.tilPortions = tilPortions;
    this.tvDisaccharidesLevel = tvDisaccharidesLevel;
    this.tvMonosaccharidesLevel = tvMonosaccharidesLevel;
    this.tvOligosaccharidesLevel = tvOligosaccharidesLevel;
    this.tvOverallFodmapLevel = tvOverallFodmapLevel;
    this.tvPolyolsLevel = tvPolyolsLevel;
    this.tvProblematicIngredients = tvProblematicIngredients;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFoodEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFoodEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_food_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFoodEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_ingredient;
      MaterialButton btnAddIngredient = ViewBindings.findChildViewById(rootView, id);
      if (btnAddIngredient == null) {
        break missingId;
      }

      id = R.id.btn_cancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_select_date_time;
      MaterialButton btnSelectDateTime = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectDateTime == null) {
        break missingId;
      }

      id = R.id.card_fodmap_analysis;
      MaterialCardView cardFodmapAnalysis = ViewBindings.findChildViewById(rootView, id);
      if (cardFodmapAnalysis == null) {
        break missingId;
      }

      id = R.id.chip_group_ingredients;
      ChipGroup chipGroupIngredients = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupIngredients == null) {
        break missingId;
      }

      id = R.id.et_food_name;
      TextInputEditText etFoodName = ViewBindings.findChildViewById(rootView, id);
      if (etFoodName == null) {
        break missingId;
      }

      id = R.id.et_new_ingredient;
      TextInputEditText etNewIngredient = ViewBindings.findChildViewById(rootView, id);
      if (etNewIngredient == null) {
        break missingId;
      }

      id = R.id.et_notes;
      TextInputEditText etNotes = ViewBindings.findChildViewById(rootView, id);
      if (etNotes == null) {
        break missingId;
      }

      id = R.id.et_portions;
      TextInputEditText etPortions = ViewBindings.findChildViewById(rootView, id);
      if (etPortions == null) {
        break missingId;
      }

      id = R.id.et_preparation_method;
      TextInputEditText etPreparationMethod = ViewBindings.findChildViewById(rootView, id);
      if (etPreparationMethod == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.spinner_eating_speed;
      AutoCompleteTextView spinnerEatingSpeed = ViewBindings.findChildViewById(rootView, id);
      if (spinnerEatingSpeed == null) {
        break missingId;
      }

      id = R.id.spinner_location;
      AutoCompleteTextView spinnerLocation = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLocation == null) {
        break missingId;
      }

      id = R.id.spinner_meal_type;
      AutoCompleteTextView spinnerMealType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMealType == null) {
        break missingId;
      }

      id = R.id.spinner_portion_unit;
      AutoCompleteTextView spinnerPortionUnit = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPortionUnit == null) {
        break missingId;
      }

      id = R.id.spinner_social_context;
      AutoCompleteTextView spinnerSocialContext = ViewBindings.findChildViewById(rootView, id);
      if (spinnerSocialContext == null) {
        break missingId;
      }

      id = R.id.til_food_name;
      TextInputLayout tilFoodName = ViewBindings.findChildViewById(rootView, id);
      if (tilFoodName == null) {
        break missingId;
      }

      id = R.id.til_portions;
      TextInputLayout tilPortions = ViewBindings.findChildViewById(rootView, id);
      if (tilPortions == null) {
        break missingId;
      }

      id = R.id.tv_disaccharides_level;
      TextView tvDisaccharidesLevel = ViewBindings.findChildViewById(rootView, id);
      if (tvDisaccharidesLevel == null) {
        break missingId;
      }

      id = R.id.tv_monosaccharides_level;
      TextView tvMonosaccharidesLevel = ViewBindings.findChildViewById(rootView, id);
      if (tvMonosaccharidesLevel == null) {
        break missingId;
      }

      id = R.id.tv_oligosaccharides_level;
      TextView tvOligosaccharidesLevel = ViewBindings.findChildViewById(rootView, id);
      if (tvOligosaccharidesLevel == null) {
        break missingId;
      }

      id = R.id.tv_overall_fodmap_level;
      TextView tvOverallFodmapLevel = ViewBindings.findChildViewById(rootView, id);
      if (tvOverallFodmapLevel == null) {
        break missingId;
      }

      id = R.id.tv_polyols_level;
      TextView tvPolyolsLevel = ViewBindings.findChildViewById(rootView, id);
      if (tvPolyolsLevel == null) {
        break missingId;
      }

      id = R.id.tv_problematic_ingredients;
      TextView tvProblematicIngredients = ViewBindings.findChildViewById(rootView, id);
      if (tvProblematicIngredients == null) {
        break missingId;
      }

      return new FragmentFoodEntryBinding((ScrollView) rootView, btnAddIngredient, btnCancel,
          btnSave, btnSelectDateTime, cardFodmapAnalysis, chipGroupIngredients, etFoodName,
          etNewIngredient, etNotes, etPortions, etPreparationMethod, progressBar,
          spinnerEatingSpeed, spinnerLocation, spinnerMealType, spinnerPortionUnit,
          spinnerSocialContext, tilFoodName, tilPortions, tvDisaccharidesLevel,
          tvMonosaccharidesLevel, tvOligosaccharidesLevel, tvOverallFodmapLevel, tvPolyolsLevel,
          tvProblematicIngredients);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
