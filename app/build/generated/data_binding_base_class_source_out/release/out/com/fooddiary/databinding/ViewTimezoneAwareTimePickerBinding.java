// Generated by view binder compiler. Do not edit!
package com.fooddiary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.DatePicker;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fooddiary.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewTimezoneAwareTimePickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonCurrentTime;

  @NonNull
  public final DatePicker datePicker;

  @NonNull
  public final TextInputEditText editTextSeconds;

  @NonNull
  public final LinearLayout layoutSeconds;

  @NonNull
  public final Spinner spinnerTimezone;

  @NonNull
  public final TextView textError;

  @NonNull
  public final TextView textSelectedDate;

  @NonNull
  public final TextView textSelectedTime;

  @NonNull
  public final TimePicker timePicker;

  @NonNull
  public final MaterialSwitch toggle24Hour;

  @NonNull
  public final MaterialSwitch toggleSeconds;

  private ViewTimezoneAwareTimePickerBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonCurrentTime, @NonNull DatePicker datePicker,
      @NonNull TextInputEditText editTextSeconds, @NonNull LinearLayout layoutSeconds,
      @NonNull Spinner spinnerTimezone, @NonNull TextView textError,
      @NonNull TextView textSelectedDate, @NonNull TextView textSelectedTime,
      @NonNull TimePicker timePicker, @NonNull MaterialSwitch toggle24Hour,
      @NonNull MaterialSwitch toggleSeconds) {
    this.rootView = rootView;
    this.buttonCurrentTime = buttonCurrentTime;
    this.datePicker = datePicker;
    this.editTextSeconds = editTextSeconds;
    this.layoutSeconds = layoutSeconds;
    this.spinnerTimezone = spinnerTimezone;
    this.textError = textError;
    this.textSelectedDate = textSelectedDate;
    this.textSelectedTime = textSelectedTime;
    this.timePicker = timePicker;
    this.toggle24Hour = toggle24Hour;
    this.toggleSeconds = toggleSeconds;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewTimezoneAwareTimePickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewTimezoneAwareTimePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_timezone_aware_time_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewTimezoneAwareTimePickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCurrentTime;
      MaterialButton buttonCurrentTime = ViewBindings.findChildViewById(rootView, id);
      if (buttonCurrentTime == null) {
        break missingId;
      }

      id = R.id.datePicker;
      DatePicker datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.editTextSeconds;
      TextInputEditText editTextSeconds = ViewBindings.findChildViewById(rootView, id);
      if (editTextSeconds == null) {
        break missingId;
      }

      id = R.id.layoutSeconds;
      LinearLayout layoutSeconds = ViewBindings.findChildViewById(rootView, id);
      if (layoutSeconds == null) {
        break missingId;
      }

      id = R.id.spinnerTimezone;
      Spinner spinnerTimezone = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTimezone == null) {
        break missingId;
      }

      id = R.id.textError;
      TextView textError = ViewBindings.findChildViewById(rootView, id);
      if (textError == null) {
        break missingId;
      }

      id = R.id.textSelectedDate;
      TextView textSelectedDate = ViewBindings.findChildViewById(rootView, id);
      if (textSelectedDate == null) {
        break missingId;
      }

      id = R.id.textSelectedTime;
      TextView textSelectedTime = ViewBindings.findChildViewById(rootView, id);
      if (textSelectedTime == null) {
        break missingId;
      }

      id = R.id.timePicker;
      TimePicker timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      id = R.id.toggle24Hour;
      MaterialSwitch toggle24Hour = ViewBindings.findChildViewById(rootView, id);
      if (toggle24Hour == null) {
        break missingId;
      }

      id = R.id.toggleSeconds;
      MaterialSwitch toggleSeconds = ViewBindings.findChildViewById(rootView, id);
      if (toggleSeconds == null) {
        break missingId;
      }

      return new ViewTimezoneAwareTimePickerBinding((LinearLayout) rootView, buttonCurrentTime,
          datePicker, editTextSeconds, layoutSeconds, spinnerTimezone, textError, textSelectedDate,
          textSelectedTime, timePicker, toggle24Hour, toggleSeconds);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
